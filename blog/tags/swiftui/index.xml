<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>swiftui on Kelvas blog</title><link>https://kelvas09.github.io/blog/tags/swiftui/</link><description>Recent content in swiftui on Kelvas blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © Kévin Sibué 2022</copyright><lastBuildDate>Sun, 01 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kelvas09.github.io/blog/tags/swiftui/index.xml" rel="self" type="application/rss+xml"/><item><title>Using a SwiftUI view in UIKit</title><link>https://kelvas09.github.io/blog/posts/swiftui_view_inside_uikit_view/</link><pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate><guid>https://kelvas09.github.io/blog/posts/swiftui_view_inside_uikit_view/</guid><description>It&amp;rsquo;s no longer news that SwiftUI is part of our iOS developer ecosystem. We have more and more opportunities with this technology and it&amp;rsquo;s high time to project ourselves with it.
So when we create a new graphical component, we always ask ourselves: do I create it in SwiftUI so that it&amp;rsquo;s compatible with the future? Or do I do it with my good old UIKit to make sure I&amp;rsquo;ve got everything right?</description></item><item><title>UIKit ViewController with SwiftUI</title><link>https://kelvas09.github.io/blog/posts/uikit-view-on-swiftui/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://kelvas09.github.io/blog/posts/uikit-view-on-swiftui/</guid><description>UIKit ViewController with SwiftUI # If you are curious like me, you must have tested SwiftUI. Personally I like this framework more and more. But I will tell you about my feedback in another article. However I have to reproach it for something: it still lacks a lot of things!
And yes, SwiftUI tries to join all the worlds (iOS, macOS, &amp;hellip;) in one. The problem is that the task is not easy.</description></item></channel></rss>