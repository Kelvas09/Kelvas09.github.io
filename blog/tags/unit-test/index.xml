<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unit Test on Kelvas blog</title><link>https://kelvas09.github.io/blog/tags/unit-test/</link><description>Recent content in Unit Test on Kelvas blog</description><generator>Hugo</generator><language>en</language><copyright>Copyright © Kévin Sibué 2024</copyright><lastBuildDate>Mon, 31 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://kelvas09.github.io/blog/tags/unit-test/index.xml" rel="self" type="application/rss+xml"/><item><title>Swift : Async unit tests</title><link>https://kelvas09.github.io/blog/posts/swift-async-unit-test/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><guid>https://kelvas09.github.io/blog/posts/swift-async-unit-test/</guid><description>In software development there is one thing that is difficult to achieve : quality.
Anyone can code but few are able to code good software. When I say good I mean robust, stable and malleable according to the necessary evolutions.
But to guarantee such a quality you need tools. Beyond the timeless design pattern, debugging tools or other, there are especially unit tests.
Of course making an iOS application in Swift is no exception to the rule.</description></item></channel></rss>